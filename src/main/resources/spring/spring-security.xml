<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/resources/**" security="none"/>

    <http pattern="/**" use-expressions="true" name="restSecurityFilterChain" create-session="stateless">
        <http-basic/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
        <csrf disabled="true"/>
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userService">
            <!--<user-service>-->
                <!--<user name="user@yandex.ru" password="password" authorities="ROLE_USER"/>-->
                <!--<user name="admin@gmail.com" password="admin" authorities="ROLE_ADMIN"/>-->
            <!--</user-service>-->
            <!--<jdbc-user-service data-source-ref="dataSource"-->
                               <!--users-by-username-query="SELECT email, password, enabled FROM users WHERE email = ?"-->
                               <!--authorities-by-username-query="-->
                                    <!--SELECT u.email, r.user_role FROM users u, user_roles r WHERE u.id = r.user_id AND u.email = ?"/>-->
        </authentication-provider>
    </authentication-manager>
</beans:beans>